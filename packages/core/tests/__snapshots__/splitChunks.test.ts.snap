// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`plugin-split-chunks > should allow forceSplitting to be an object 1`] = `
{
  "optimization": {
    "splitChunks": {
      "cacheGroups": {
        "axios": {
          "chunks": "all",
          "enforce": true,
          "name": "axios",
          "test": /axios/,
        },
      },
      "chunks": "all",
      "enforceSizeThreshold": 50000,
    },
  },
}
`;

exports[`plugin-split-chunks > should not split chunks when target is node 1`] = `
{
  "optimization": {
    "splitChunks": false,
  },
}
`;

exports[`plugin-split-chunks > should set all-in-one config 1`] = `
{
  "optimization": {
    "splitChunks": false,
  },
}
`;

exports[`plugin-split-chunks > should set custom config 1`] = `
{
  "optimization": {
    "splitChunks": {
      "cacheGroups": {
        "force-split-0": {
          "chunks": "all",
          "enforce": true,
          "name": "force-split-0",
          "test": /react/,
        },
      },
      "chunks": "all",
      "enforceSizeThreshold": 50000,
    },
  },
}
`;

exports[`plugin-split-chunks > should set single-size config 1`] = `
{
  "optimization": {
    "splitChunks": {
      "cacheGroups": {},
      "chunks": "all",
      "enforceSizeThreshold": 50000,
      "maxSize": 5000,
      "minSize": 1000,
    },
  },
}
`;

exports[`plugin-split-chunks > should set single-vendor config 1`] = `
{
  "optimization": {
    "splitChunks": {
      "cacheGroups": {
        "singleVendor": {
          "chunks": "all",
          "enforce": true,
          "name": "vendor",
          "priority": 0,
          "reuseExistingChunk": true,
          "test": /\\[\\\\\\\\/\\]node_modules\\[\\\\\\\\/\\]/,
        },
      },
      "chunks": "all",
      "enforceSizeThreshold": 50000,
    },
  },
}
`;

exports[`plugin-split-chunks > should set split-by-experience config 1`] = `
{
  "optimization": {
    "splitChunks": {
      "cacheGroups": {
        "lib-axios": {
          "name": "lib-axios",
          "priority": 0,
          "reuseExistingChunk": true,
          "test": /\\[\\\\\\\\/\\]node_modules\\[\\\\\\\\/\\]\\(axios\\|axios-\\.\\+\\)\\[\\\\\\\\/\\]/,
        },
        "lib-lodash": {
          "name": "lib-lodash",
          "priority": 0,
          "reuseExistingChunk": true,
          "test": /\\[\\\\\\\\/\\]node_modules\\[\\\\\\\\/\\]\\(lodash\\|lodash-es\\)\\[\\\\\\\\/\\]/,
        },
        "lib-polyfill": {
          "name": "lib-polyfill",
          "priority": 0,
          "reuseExistingChunk": true,
          "test": /\\[\\\\\\\\/\\]node_modules\\[\\\\\\\\/\\]\\(tslib\\|core-js\\|@babel\\\\/runtime\\|@swc\\\\/helpers\\)\\[\\\\\\\\/\\]/,
        },
      },
      "chunks": "all",
      "enforceSizeThreshold": 50000,
    },
  },
}
`;

exports[`plugin-split-chunks > should set split-by-experience config correctly when polyfill is off 1`] = `
{
  "optimization": {
    "splitChunks": {
      "cacheGroups": {
        "lib-axios": {
          "name": "lib-axios",
          "priority": 0,
          "reuseExistingChunk": true,
          "test": /\\[\\\\\\\\/\\]node_modules\\[\\\\\\\\/\\]\\(axios\\|axios-\\.\\+\\)\\[\\\\\\\\/\\]/,
        },
        "lib-lodash": {
          "name": "lib-lodash",
          "priority": 0,
          "reuseExistingChunk": true,
          "test": /\\[\\\\\\\\/\\]node_modules\\[\\\\\\\\/\\]\\(lodash\\|lodash-es\\)\\[\\\\\\\\/\\]/,
        },
      },
      "chunks": "all",
      "enforceSizeThreshold": 50000,
    },
  },
}
`;

exports[`plugin-split-chunks > should set split-by-module config 1`] = `
{
  "optimization": {
    "splitChunks": {
      "cacheGroups": {
        "vendors": {
          "name": [Function],
          "priority": -9,
          "test": /\\[\\\\\\\\/\\]node_modules\\[\\\\\\\\/\\]/,
        },
      },
      "chunks": "all",
      "enforceSizeThreshold": 50000,
      "maxInitialRequests": Infinity,
      "minSize": 0,
    },
  },
}
`;
