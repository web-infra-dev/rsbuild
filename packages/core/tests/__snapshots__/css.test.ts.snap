// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`plugin-css > should override browserslist of autoprefixer when using output.overrideBrowserslist config 1`] = `
{
  "experiments": {
    "css": false,
  },
  "module": {
    "rules": [
      {
        "resolve": {
          "preferRelative": true,
        },
        "sideEffects": true,
        "test": /\\\\\\.css\\$/,
        "use": [
          {
            "loader": "<ROOT>/node_modules/<PNPM_INNER>/@rspack/core/dist/builtin-plugin/css-extract/loader.js",
          },
          {
            "loader": "<ROOT>/packages/core/compiled/css-loader",
            "options": {
              "importLoaders": 1,
              "modules": {
                "auto": true,
                "exportGlobals": false,
                "exportLocalsConvention": "camelCase",
                "localIdentName": "[path][name]__[local]-[hash:base64:6]",
                "namedExport": false,
              },
              "sourceMap": false,
            },
          },
          {
            "loader": "<ROOT>/packages/core/compiled/postcss-loader",
            "options": {
              "postcssOptions": {
                "config": false,
                "plugins": [
                  {
                    "browsers": [
                      "Chrome 80",
                    ],
                    "info": [Function],
                    "options": {
                      "flexbox": "no-2009",
                      "overrideBrowserslist": [
                        "Chrome 80",
                      ],
                    },
                    "postcssPlugin": "autoprefixer",
                    "prepare": [Function],
                  },
                ],
              },
              "sourceMap": false,
            },
          },
        ],
      },
    ],
  },
}
`;

exports[`plugin-css > should use custom cssModules rule when using output.cssModules config 1`] = `
{
  "experiments": {
    "css": false,
  },
  "module": {
    "rules": [
      {
        "resolve": {
          "preferRelative": true,
        },
        "sideEffects": true,
        "test": /\\\\\\.css\\$/,
        "use": [
          {
            "loader": "<ROOT>/node_modules/<PNPM_INNER>/@rspack/core/dist/builtin-plugin/css-extract/loader.js",
          },
          {
            "loader": "<ROOT>/packages/core/compiled/css-loader",
            "options": {
              "importLoaders": 1,
              "modules": {
                "auto": [Function],
                "exportGlobals": false,
                "exportLocalsConvention": "camelCase",
                "localIdentName": "[path][name]__[local]-[hash:base64:6]",
                "namedExport": false,
              },
              "sourceMap": false,
            },
          },
          {
            "loader": "<ROOT>/packages/core/compiled/postcss-loader",
            "options": {
              "postcssOptions": {
                "config": false,
                "plugins": [
                  {
                    "browsers": [
                      "chrome >= 87",
                      "edge >= 88",
                      "firefox >= 78",
                      "safari >= 14",
                    ],
                    "info": [Function],
                    "options": {
                      "flexbox": "no-2009",
                      "overrideBrowserslist": [
                        "chrome >= 87",
                        "edge >= 88",
                        "firefox >= 78",
                        "safari >= 14",
                      ],
                    },
                    "postcssPlugin": "autoprefixer",
                    "prepare": [Function],
                  },
                ],
              },
              "sourceMap": false,
            },
          },
        ],
      },
    ],
  },
}
`;

exports[`plugin-css injectStyles > should apply ignoreCssLoader when injectStyles is true and target is node 1`] = `
{
  "experiments": {
    "css": false,
  },
  "module": {
    "rules": [
      {
        "resolve": {
          "preferRelative": true,
        },
        "sideEffects": true,
        "test": /\\\\\\.css\\$/,
        "use": [
          {
            "loader": "<ROOT>/packages/core/src/ignoreCssLoader.cjs",
          },
          {
            "loader": "<ROOT>/packages/core/compiled/css-loader",
            "options": {
              "importLoaders": 1,
              "modules": {
                "auto": true,
                "exportGlobals": false,
                "exportLocalsConvention": "camelCase",
                "exportOnlyLocals": true,
                "localIdentName": "[path][name]__[local]-[hash:base64:6]",
                "namedExport": false,
              },
              "sourceMap": false,
            },
          },
        ],
      },
    ],
  },
}
`;

exports[`plugin-css injectStyles > should use css-loader + style-loader when injectStyles is true 1`] = `
{
  "experiments": {
    "css": false,
  },
  "module": {
    "rules": [
      {
        "resolve": {
          "preferRelative": true,
        },
        "sideEffects": true,
        "test": /\\\\\\.css\\$/,
        "use": [
          {
            "loader": "<ROOT>/packages/core/compiled/style-loader",
          },
          {
            "loader": "<ROOT>/packages/core/compiled/css-loader",
            "options": {
              "importLoaders": 1,
              "modules": {
                "auto": true,
                "exportGlobals": false,
                "exportLocalsConvention": "camelCase",
                "localIdentName": "[path][name]__[local]-[hash:base64:6]",
                "namedExport": false,
              },
              "sourceMap": false,
            },
          },
          {
            "loader": "<ROOT>/packages/core/compiled/postcss-loader",
            "options": {
              "postcssOptions": {
                "config": false,
                "plugins": [
                  {
                    "browsers": [
                      "chrome >= 87",
                      "edge >= 88",
                      "firefox >= 78",
                      "safari >= 14",
                    ],
                    "info": [Function],
                    "options": {
                      "flexbox": "no-2009",
                      "overrideBrowserslist": [
                        "chrome >= 87",
                        "edge >= 88",
                        "firefox >= 78",
                        "safari >= 14",
                      ],
                    },
                    "postcssPlugin": "autoprefixer",
                    "prepare": [Function],
                  },
                ],
              },
              "sourceMap": false,
            },
          },
        ],
      },
    ],
  },
}
`;
