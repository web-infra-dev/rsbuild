// Snapshot v1

exports[`plugin-css > should use custom cssModules rule when using output.cssModules config 1`] = `
{
  "module": {
    "rules": [
      {
        "dependency": {
          "not": "url",
        },
        "resolve": {
          "preferRelative": true,
        },
        "resourceQuery": {
          "not": /raw\\|inline/,
        },
        "sideEffects": true,
        "test": /\\\\\\.css\\$/,
        "type": "javascript/auto",
        "use": [
          {
            "loader": "<ROOT>/node_modules/<PNPM_INNER>/@rspack/core/dist/cssExtractLoader.js",
          },
          {
            "loader": "<ROOT>/packages/core/compiled/css-loader/index.js",
            "options": {
              "importLoaders": 1,
              "modules": {
                "auto": [Function],
                "exportGlobals": false,
                "exportLocalsConvention": "camelCase",
                "localIdentName": "[path][name]__[local]-[hash:base64:6]",
                "namedExport": false,
              },
              "sourceMap": false,
            },
          },
          {
            "loader": "builtin:lightningcss-loader",
            "options": {
              "errorRecovery": true,
              "targets": [
                "chrome >= 87",
                "edge >= 88",
                "firefox >= 78",
                "safari >= 14",
              ],
            },
          },
        ],
      },
      {
        "resolve": {
          "preferRelative": true,
        },
        "resourceQuery": /inline/,
        "sideEffects": true,
        "test": /\\\\\\.css\\$/,
        "type": "javascript/auto",
        "use": [
          {
            "loader": "<ROOT>/packages/core/compiled/css-loader/index.js",
            "options": {
              "exportType": "string",
              "importLoaders": 1,
              "modules": false,
              "sourceMap": false,
            },
          },
          {
            "loader": "builtin:lightningcss-loader",
            "options": {
              "errorRecovery": true,
              "targets": [
                "chrome >= 87",
                "edge >= 88",
                "firefox >= 78",
                "safari >= 14",
              ],
            },
          },
        ],
      },
      {
        "resourceQuery": /raw/,
        "test": /\\\\\\.css\\$/,
        "type": "asset/source",
      },
    ],
  },
  "plugins": [
    CssExtractRspackPlugin {
      "options": {
        "chunkFilename": "static/css/async/[name].css",
        "filename": "static/css/[name].css",
        "ignoreOrder": true,
      },
    },
    {
      "name": "RsbuildCorePlugin",
    },
  ],
}
`;

exports[`plugin-css injectStyles > should apply ignoreCssLoader when injectStyles is true and target is node 1`] = `
{
  "module": {
    "rules": [
      {
        "dependency": {
          "not": "url",
        },
        "resolve": {
          "preferRelative": true,
        },
        "resourceQuery": {
          "not": /raw\\|inline/,
        },
        "sideEffects": true,
        "test": /\\\\\\.css\\$/,
        "type": "javascript/auto",
        "use": [
          {
            "loader": "<ROOT>/packages/core/src/ignoreCssLoader.mjs",
          },
          {
            "loader": "<ROOT>/packages/core/compiled/css-loader/index.js",
            "options": {
              "importLoaders": 0,
              "modules": {
                "auto": true,
                "exportGlobals": false,
                "exportLocalsConvention": "camelCase",
                "exportOnlyLocals": true,
                "localIdentName": "[path][name]__[local]-[hash:base64:6]",
                "namedExport": false,
              },
              "sourceMap": false,
            },
          },
        ],
      },
      {
        "resolve": {
          "preferRelative": true,
        },
        "resourceQuery": /inline/,
        "sideEffects": true,
        "test": /\\\\\\.css\\$/,
        "type": "javascript/auto",
        "use": [
          {
            "loader": "<ROOT>/packages/core/compiled/css-loader/index.js",
            "options": {
              "exportType": "string",
              "importLoaders": 0,
              "modules": false,
              "sourceMap": false,
            },
          },
        ],
      },
      {
        "resourceQuery": /raw/,
        "test": /\\\\\\.css\\$/,
        "type": "asset/source",
      },
    ],
  },
  "plugins": [
    {
      "name": "RsbuildCorePlugin",
    },
  ],
}
`;

exports[`plugin-css injectStyles > should use css-loader + style-loader when injectStyles is true 1`] = `
{
  "module": {
    "rules": [
      {
        "dependency": {
          "not": "url",
        },
        "resolve": {
          "preferRelative": true,
        },
        "resourceQuery": {
          "not": /raw\\|inline/,
        },
        "sideEffects": true,
        "test": /\\\\\\.css\\$/,
        "type": "javascript/auto",
        "use": [
          {
            "loader": "<ROOT>/packages/core/compiled/style-loader/index.js",
          },
          {
            "loader": "<ROOT>/packages/core/compiled/css-loader/index.js",
            "options": {
              "importLoaders": 1,
              "modules": {
                "auto": true,
                "exportGlobals": false,
                "exportLocalsConvention": "camelCase",
                "localIdentName": "[path][name]__[local]-[hash:base64:6]",
                "namedExport": false,
              },
              "sourceMap": false,
            },
          },
          {
            "loader": "builtin:lightningcss-loader",
            "options": {
              "errorRecovery": true,
              "targets": [
                "chrome >= 87",
                "edge >= 88",
                "firefox >= 78",
                "safari >= 14",
              ],
            },
          },
        ],
      },
      {
        "resolve": {
          "preferRelative": true,
        },
        "resourceQuery": /inline/,
        "sideEffects": true,
        "test": /\\\\\\.css\\$/,
        "type": "javascript/auto",
        "use": [
          {
            "loader": "<ROOT>/packages/core/compiled/css-loader/index.js",
            "options": {
              "exportType": "string",
              "importLoaders": 1,
              "modules": false,
              "sourceMap": false,
            },
          },
          {
            "loader": "builtin:lightningcss-loader",
            "options": {
              "errorRecovery": true,
              "targets": [
                "chrome >= 87",
                "edge >= 88",
                "firefox >= 78",
                "safari >= 14",
              ],
            },
          },
        ],
      },
      {
        "resourceQuery": /raw/,
        "test": /\\\\\\.css\\$/,
        "type": "asset/source",
      },
    ],
  },
  "plugins": [
    {
      "name": "RsbuildCorePlugin",
    },
  ],
}
`;

exports[`should ensure isolation of PostCSS config objects between different builds 1`] = `
[
  {
    "dependency": {
      "not": "url",
    },
    "resolve": {
      "preferRelative": true,
    },
    "resourceQuery": {
      "not": /raw\\|inline/,
    },
    "sideEffects": true,
    "test": /\\\\\\.css\\$/,
    "type": "javascript/auto",
    "use": [
      {
        "loader": "<ROOT>/node_modules/<PNPM_INNER>/@rspack/core/dist/cssExtractLoader.js",
      },
      {
        "loader": "<ROOT>/packages/core/compiled/css-loader/index.js",
        "options": {
          "importLoaders": 2,
          "modules": {
            "auto": true,
            "exportGlobals": false,
            "exportLocalsConvention": "camelCase",
            "localIdentName": "[path][name]__[local]-[hash:base64:6]",
            "namedExport": false,
          },
          "sourceMap": false,
        },
      },
      {
        "loader": "builtin:lightningcss-loader",
        "options": {
          "errorRecovery": true,
          "targets": [
            "chrome >= 87",
            "edge >= 88",
            "firefox >= 78",
            "safari >= 14",
          ],
        },
      },
      {
        "loader": "<ROOT>/packages/core/compiled/postcss-loader/index.js",
        "options": {
          "implementation": "<ROOT>/packages/core/compiled/postcss/index.js",
          "postcssOptions": {
            "config": false,
            "plugins": [
              {
                "postcssPlugin": "foo",
              },
            ],
          },
          "sourceMap": false,
        },
      },
    ],
  },
  {
    "resolve": {
      "preferRelative": true,
    },
    "resourceQuery": /inline/,
    "sideEffects": true,
    "test": /\\\\\\.css\\$/,
    "type": "javascript/auto",
    "use": [
      {
        "loader": "<ROOT>/packages/core/compiled/css-loader/index.js",
        "options": {
          "exportType": "string",
          "importLoaders": 2,
          "modules": false,
          "sourceMap": false,
        },
      },
      {
        "loader": "builtin:lightningcss-loader",
        "options": {
          "errorRecovery": true,
          "targets": [
            "chrome >= 87",
            "edge >= 88",
            "firefox >= 78",
            "safari >= 14",
          ],
        },
      },
      {
        "loader": "<ROOT>/packages/core/compiled/postcss-loader/index.js",
        "options": {
          "implementation": "<ROOT>/packages/core/compiled/postcss/index.js",
          "postcssOptions": {
            "config": false,
            "plugins": [
              {
                "postcssPlugin": "foo",
              },
            ],
          },
          "sourceMap": false,
        },
      },
    ],
  },
  {
    "resourceQuery": /raw/,
    "test": /\\\\\\.css\\$/,
    "type": "asset/source",
  },
]
`;

exports[`should ensure isolation of PostCSS config objects between different builds 2`] = `
[
  {
    "dependency": {
      "not": "url",
    },
    "resolve": {
      "preferRelative": true,
    },
    "resourceQuery": {
      "not": /raw\\|inline/,
    },
    "sideEffects": true,
    "test": /\\\\\\.css\\$/,
    "type": "javascript/auto",
    "use": [
      {
        "loader": "<ROOT>/node_modules/<PNPM_INNER>/@rspack/core/dist/cssExtractLoader.js",
      },
      {
        "loader": "<ROOT>/packages/core/compiled/css-loader/index.js",
        "options": {
          "importLoaders": 2,
          "modules": {
            "auto": true,
            "exportGlobals": false,
            "exportLocalsConvention": "camelCase",
            "localIdentName": "[path][name]__[local]-[hash:base64:6]",
            "namedExport": false,
          },
          "sourceMap": false,
        },
      },
      {
        "loader": "builtin:lightningcss-loader",
        "options": {
          "errorRecovery": true,
          "targets": [
            "chrome >= 87",
            "edge >= 88",
            "firefox >= 78",
            "safari >= 14",
          ],
        },
      },
      {
        "loader": "<ROOT>/packages/core/compiled/postcss-loader/index.js",
        "options": {
          "implementation": "<ROOT>/packages/core/compiled/postcss/index.js",
          "postcssOptions": {
            "config": false,
            "plugins": [
              {
                "postcssPlugin": "bar",
              },
            ],
          },
          "sourceMap": false,
        },
      },
    ],
  },
  {
    "resolve": {
      "preferRelative": true,
    },
    "resourceQuery": /inline/,
    "sideEffects": true,
    "test": /\\\\\\.css\\$/,
    "type": "javascript/auto",
    "use": [
      {
        "loader": "<ROOT>/packages/core/compiled/css-loader/index.js",
        "options": {
          "exportType": "string",
          "importLoaders": 2,
          "modules": false,
          "sourceMap": false,
        },
      },
      {
        "loader": "builtin:lightningcss-loader",
        "options": {
          "errorRecovery": true,
          "targets": [
            "chrome >= 87",
            "edge >= 88",
            "firefox >= 78",
            "safari >= 14",
          ],
        },
      },
      {
        "loader": "<ROOT>/packages/core/compiled/postcss-loader/index.js",
        "options": {
          "implementation": "<ROOT>/packages/core/compiled/postcss/index.js",
          "postcssOptions": {
            "config": false,
            "plugins": [
              {
                "postcssPlugin": "bar",
              },
            ],
          },
          "sourceMap": false,
        },
      },
    ],
  },
  {
    "resourceQuery": /raw/,
    "test": /\\\\\\.css\\$/,
    "type": "asset/source",
  },
]
`;
