(()=>{var e={434:(e,t,o)=>{const r=o(147);const n=o(17);const s=o(37);const c=o(113);const a=o(684);const i=a.version;const u=/(?:^|^)\s*(?:export\s+)?([\w.-]+)(?:\s*=\s*?|:\s+?)(\s*'(?:\\'|[^'])*'|\s*"(?:\\"|[^"])*"|\s*`(?:\\`|[^`])*`|[^#\r\n]+)?\s*(?:#.*)?(?:$|$)/gm;function parse(e){const t={};let o=e.toString();o=o.replace(/\r\n?/gm,"\n");let r;while((r=u.exec(o))!=null){const e=r[1];let o=r[2]||"";o=o.trim();const n=o[0];o=o.replace(/^(['"`])([\s\S]*)\1$/gm,"$2");if(n==='"'){o=o.replace(/\\n/g,"\n");o=o.replace(/\\r/g,"\r")}t[e]=o}return t}function _parseVault(e){const t=_vaultPath(e);const o=l.configDotenv({path:t});if(!o.parsed){const e=new Error(`MISSING_DATA: Cannot parse ${t} for an unknown reason`);e.code="MISSING_DATA";throw e}const r=_dotenvKey(e).split(",");const n=r.length;let s;for(let e=0;e<n;e++){try{const t=r[e].trim();const n=_instructions(o,t);s=l.decrypt(n.ciphertext,n.key);break}catch(t){if(e+1>=n){throw t}}}return l.parse(s)}function _log(e){console.log(`[dotenv@${i}][INFO] ${e}`)}function _warn(e){console.log(`[dotenv@${i}][WARN] ${e}`)}function _debug(e){console.log(`[dotenv@${i}][DEBUG] ${e}`)}function _dotenvKey(e){if(e&&e.DOTENV_KEY&&e.DOTENV_KEY.length>0){return e.DOTENV_KEY}if(process.env.DOTENV_KEY&&process.env.DOTENV_KEY.length>0){return process.env.DOTENV_KEY}return""}function _instructions(e,t){let o;try{o=new URL(t)}catch(e){if(e.code==="ERR_INVALID_URL"){const e=new Error("INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenvx.com/vault/.env.vault?environment=development");e.code="INVALID_DOTENV_KEY";throw e}throw e}const r=o.password;if(!r){const e=new Error("INVALID_DOTENV_KEY: Missing key part");e.code="INVALID_DOTENV_KEY";throw e}const n=o.searchParams.get("environment");if(!n){const e=new Error("INVALID_DOTENV_KEY: Missing environment part");e.code="INVALID_DOTENV_KEY";throw e}const s=`DOTENV_VAULT_${n.toUpperCase()}`;const c=e.parsed[s];if(!c){const e=new Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${s} in your .env.vault file.`);e.code="NOT_FOUND_DOTENV_ENVIRONMENT";throw e}return{ciphertext:c,key:r}}function _vaultPath(e){let t=null;if(e&&e.path&&e.path.length>0){if(Array.isArray(e.path)){for(const o of e.path){if(r.existsSync(o)){t=o.endsWith(".vault")?o:`${o}.vault`}}}else{t=e.path.endsWith(".vault")?e.path:`${e.path}.vault`}}else{t=n.resolve(process.cwd(),".env.vault")}if(r.existsSync(t)){return t}return null}function _resolveHome(e){return e[0]==="~"?n.join(s.homedir(),e.slice(1)):e}function _configVault(e){_log("Loading env from encrypted .env.vault");const t=l._parseVault(e);let o=process.env;if(e&&e.processEnv!=null){o=e.processEnv}l.populate(o,t,e);return{parsed:t}}function configDotenv(e){const t=n.resolve(process.cwd(),".env");let o="utf8";const s=Boolean(e&&e.debug);if(e&&e.encoding){o=e.encoding}else{if(s){_debug("No encoding is specified. UTF-8 is used by default")}}let c=[];if(e&&e.path){if(!Array.isArray(e.path)){if(r.existsSync(e.path)){c=[_resolveHome(e.path)]}}else{for(const t of e.path){if(r.existsSync(t)){c.push(_resolveHome(t))}}}if(!c.length){c=[t]}}const a=c.length?c:[t];const i={};try{for(const t of a){const n=l.parse(r.readFileSync(t,{encoding:o}));l.populate(i,n,e)}let t=process.env;if(e&&e.processEnv!=null){t=e.processEnv}l.populate(t,i,e)}catch(e){if(s){_debug(`Failed to load ${a} ${e.message}`)}return{error:e}}return{parsed:i}}function config(e){if(_dotenvKey(e).length===0){return l.configDotenv(e)}const t=_vaultPath(e);if(!t){_warn(`You set DOTENV_KEY but you are missing a .env.vault file at ${t}. Did you forget to build it?`);return l.configDotenv(e)}return l._configVault(e)}function decrypt(e,t){const o=Buffer.from(t.slice(-64),"hex");let r=Buffer.from(e,"base64");const n=r.subarray(0,12);const s=r.subarray(-16);r=r.subarray(12,-16);try{const e=c.createDecipheriv("aes-256-gcm",o,n);e.setAuthTag(s);return`${e.update(r)}${e.final()}`}catch(e){const t=e instanceof RangeError;const o=e.message==="Invalid key length";const r=e.message==="Unsupported state or unable to authenticate data";if(t||o){const e=new Error("INVALID_DOTENV_KEY: It must be 64 characters long (or more)");e.code="INVALID_DOTENV_KEY";throw e}else if(r){const e=new Error("DECRYPTION_FAILED: Please check your DOTENV_KEY");e.code="DECRYPTION_FAILED";throw e}else{throw e}}}function populate(e,t,o={}){const r=Boolean(o&&o.debug);const n=Boolean(o&&o.override);if(typeof t!=="object"){const e=new Error("OBJECT_REQUIRED: Please check the processEnv argument being passed to populate");e.code="OBJECT_REQUIRED";throw e}for(const o of Object.keys(t)){if(Object.prototype.hasOwnProperty.call(e,o)){if(n===true){e[o]=t[o]}if(r){if(n===true){_debug(`"${o}" is already defined and WAS overwritten`)}else{_debug(`"${o}" is already defined and was NOT overwritten`)}}}else{e[o]=t[o]}}}const l={configDotenv:configDotenv,_configVault:_configVault,_parseVault:_parseVault,config:config,decrypt:decrypt,parse:parse,populate:populate};e.exports.configDotenv=l.configDotenv;e.exports._configVault=l._configVault;e.exports._parseVault=l._parseVault;e.exports.config=l.config;e.exports.decrypt=l.decrypt;e.exports.parse=l.parse;e.exports.populate=l.populate;e.exports=l},684:e=>{"use strict";e.exports=require("./package.json")},113:e=>{"use strict";e.exports=require("crypto")},147:e=>{"use strict";e.exports=require("fs")},37:e=>{"use strict";e.exports=require("os")},17:e=>{"use strict";e.exports=require("path")}};var t={};function __nccwpck_require__(o){var r=t[o];if(r!==undefined){return r.exports}var n=t[o]={exports:{}};var s=true;try{e[o](n,n.exports,__nccwpck_require__);s=false}finally{if(s)delete t[o]}return n.exports}if(typeof __nccwpck_require__!=="undefined")__nccwpck_require__.ab=__dirname+"/";var o=__nccwpck_require__(434);module.exports=o})();